<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">
    <head>
        <meta name="description" content="FireLight ACORD Tx1228 Usage; POST ACORD Tx1228 to FireLight; Generating the &lt;CryptPswd&gt; Contents; Deriving the IV from the Shared Key; Tx1228 in an SSO" />
    
<!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:display_urn_x003a_schemas-microsoft-com_x003a_office_x003a_office_x0023_Editor msdt:dt="string">Aaron Anstett</mso:display_urn_x003a_schemas-microsoft-com_x003a_office_x003a_office_x0023_Editor>
<mso:Order msdt:dt="string">11271400.0000000</mso:Order>
<mso:display_urn_x003a_schemas-microsoft-com_x003a_office_x003a_office_x0023_Author msdt:dt="string">Aaron Anstett</mso:display_urn_x003a_schemas-microsoft-com_x003a_office_x003a_office_x0023_Author>
<mso:ContentTypeId msdt:dt="string">0x0101008929D749402B574EB13ADAD0319B6BEE</mso:ContentTypeId>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>
    <body>
        <h1><a name="top"></a>Usage</h1>
        <h2>POST ACORD Tx1228 to FireLight</h2>
        <p>When the external system performs a POST to FireLight<sup MadCap:conditions="Default.Web">®</sup> to authenticate and authorize a user the &lt;UserAuthRequest&gt; element is required.</p>
        <h3>Generating the &lt;CryptPswd&gt; Contents</h3>
        <p>Requirement:</p>
        <p class="Indent">Ensure that the value being passed is exactly the same as the value being hashed. If using an XML parser, ensure the string returned from that tool is the same as what was printed to the HTML. For example, the parser might return a shortened form of the empty elements and the XML in the form sent to FireLight might have the long version.</p>
        <p>The value stored within the &lt;CryptPswd&gt; element is generated by following these steps:</p>
        <ol>
            <li>
                <p>Create a SHA1 hash of the &lt;TXLifeRequest&gt; aggregate contents.</p>
                <ul>
                    <li>
                        <p>Newline and space characters between tags in the TXLifeRequest element should be removed.</p>
                    </li>
                    <li>
                        <p>When creating the hash code from the TXLIfeRequest XML fragment, include the ACORD namespace in the root element of the fragment. So when you pull out the TXLifeRequest node, the &lt;TXLifeRequest&gt; would look like the following:</p>
                        <p class="CodeIndent1">&lt;TXLifeRequest xmlns="http://ACORD.org/Standards/Life/2"&gt;</p>
                    </li>
                </ul>
            </li>
            <li>
                <p>Convert the hashed byte array to upper-cased hex values.</p>
            </li>
            <li>
                <p>Concatenate the password to the end of the generated hash from step 2.</p>
            </li>
            <li>
                <p>	Sign the contents from step 2 using the AES, symmetrical algorithm. To initialize the algorithm, set the Key and Initialization Vector to a 16 byte value derived from the Shared key provided to you from Insurance Technologies. See the next section on how to derive the actual key. </p>
                <p>If the provider you are using for the encryption allows you to set the blocking mode and padding scheme, select “Cipher Block Chaining (CBC)” for blocking mode and “PKCS5” for the padding mode.</p>
            </li>
            <li>
                <p>Base64 encode the value returned from step 4.</p>
            </li>
            <li>
                <p>Store the result in the &lt;CryptPswd&gt; element.</p>
            </li>
        </ol>
        <h3>Deriving the IV from the Shared Key</h3>
        <p>The minimum key size for the AES algorithm is 16 bytes. The Shared Key provided to you from Insurance Technologies may be less than the 16 bytes minimum for the algorithm. To generate a key with the required length, repeat the characters within the Shared Key until the desired length is achieved. For example, if the Shared Key is “SomeKeyValue”, which has a length of 12. The actual key for the algorithm would be “SomeKeyValueSome”.</p>
        <h2>Tx1228 in an SSO</h2>
        <p>When accessing FireLight using an SSO from an external system the Tx1228 is optional. When including the Tx1228 the &lt;UserAuthRequest&gt; element is not required, because the user is authenticated via the SSO.</p>
        <MadCap:pageBreak />
    </body>
</html>