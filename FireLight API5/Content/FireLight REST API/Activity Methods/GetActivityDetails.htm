<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882">
    <head>
        <link href="../../Resources/Stylesheets/Styles.css" rel="stylesheet" type="text/css" />
    
<!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:display_urn_x003a_schemas-microsoft-com_x003a_office_x003a_office_x0023_Editor msdt:dt="string">Aaron Anstett</mso:display_urn_x003a_schemas-microsoft-com_x003a_office_x003a_office_x0023_Editor>
<mso:Order msdt:dt="string">11233000.0000000</mso:Order>
<mso:display_urn_x003a_schemas-microsoft-com_x003a_office_x003a_office_x0023_Author msdt:dt="string">Aaron Anstett</mso:display_urn_x003a_schemas-microsoft-com_x003a_office_x003a_office_x0023_Author>
<mso:ContentTypeId msdt:dt="string">0x0101008929D749402B574EB13ADAD0319B6BEE</mso:ContentTypeId>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>
    <body>
        <h1><a name="top"></a>GetActivityDetails</h1>
        <p><b>HTTP GET to query for information about a specific activity.</b> </p>
        <p>Requires an API Token with an associated user.</p>
        <p><b>URL</b>
        </p>
        <p>{<a href="../Endpoint Root URLs.htm" class="Hyperlink" alt="rootURL">rootURL</a>}/Activity/GetActivityDetails?activityId=XXX</p>
        <p><b>Parameters</b>
        </p>
        <ul class="ul_4">
            <li>
                <p><b>activityId</b>: <em>string</em> <b class="red">*required</b></p>
                <p>The unique ID of the activity to be retrieved</p>
            </li>
        </ul>
        <p><b>Response</b>
        </p>
        <p>The GetActivityDetails model for the requested activity is returned.&#160; If the GetActivityDetails method was not able to locate the activityId that was passed to it, the <MadCap:xref href="../../JSON Models/Rest API Models/GetActivityDetails.htm" alt="GetActivityDetails">GetActivityDetails</MadCap:xref> Model is populated with default values.</p>
        <p><b>Example</b>
        </p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetCaption>
                <p>GetActivityDetails - GET</p>
            </MadCap:codeSnippetCaption>
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: JavaScript;">Activity result = null;
            string url = "https://firelight.insurancetechnologies.com/EGApp/api/Activity/GetActivityDetails?activityId=" + activityId;
            String token = GetToken();
            try
            {
                HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);

                request.ContentType = "application/json";
                request.Headers.Add("authorization", "Bearer " + token);
                request.Method = "GET";

                using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
                {
                    StreamReader reader = new StreamReader(response.GetResponseStream());
                    string data = reader.ReadToEnd();
                    Console.WriteLine(data);

                    result = JsonConvert.DeserializeObject(data, typeof(Activity)) as Activity;
                }
            }
            catch (WebException ex)
            {
                if (ex.Response != null &amp;&amp; ex.Response.ContentLength &gt; 0)
                {
                    using (StreamReader s = new StreamReader(ex.Response.GetResponseStream()))
                    {
                        string message = s.ReadToEnd();
                        Console.WriteLine(message);
                    }
                }
                throw;
            }</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <p>&#160;</p>
        <p><b>HTTP POST to get information about a specific activity with list of DataItems passed with request. </b>
        </p>
        <p>Requires an API Token with an associated user.</p>
        <p><b>URL</b>
        </p>
        <p>{<a href="../Endpoint Root URLs.htm" class="Hyperlink" alt="rootURL">rootURL</a>}/Activity/GetActivityDetails</p>
        <p><b>Request body </b><b class="red">*required</b>
        </p>
        <p>
            <MadCap:xref href="../../JSON Models/Rest API Models/ActivityDetailRequest.htm" alt="ActivityDetailRequest">ActivityDetailRequest</MadCap:xref> Model. </p>
        <p>The request body needed to get an activity details </p>
        <p><b>Response</b>
        </p>
        <p>The GetActivityDetails model for the requested activity is returned.&#160; If the GetActivityDetails method was not able to locate the activityId that was passed to it, the  <MadCap:xref href="../../JSON Models/Rest API Models/GetActivityDetails.htm" alt="GetActivityDetails">GetActivityDetails</MadCap:xref> Model is populated with default values.</p>
        <p><b>Example</b>
        </p>
        <MadCap:codeSnippet style="caption-side: ; mc-caption-repeat: ;">
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetCaption>
                <p>GetActivityDetails - POST</p>
            </MadCap:codeSnippetCaption>
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve" style="mc-code-lang: JavaScript;"> 	     Activity result = null;
            string url = "https://firelight.insurancetechnologies.com/EGApp/api/Activity/GetActivityDetails"

    string body = "{ 'Id': '2001ec54-8ac9-4c86-a23b-553aa6e5e3de', 
              'DataItems': [ {'DataItemId':'Owner_FirstName'},{'DataItemId':'Owner_LastName'}] }";

            String token = GetToken();
            try
            {
                HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);

request.ContentType = "application/json";
                request.Headers.Add("authorization", "Bearer " + token);
                request.Method = "POST";

	         Byte[] contentBytes = Encoding.UTF8.GetBytes(body);
                request.ContentLength = contentBytes.LongLength;
// Send request
    using (Stream post = request.GetRequestStream())
    {
        post.Write(contentBytes, 0, contentBytes.Length);
    }


                using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
                {
                    StreamReader reader = new StreamReader(response.GetResponseStream());
                    string data = reader.ReadToEnd();
                    Console.WriteLine(data);

                    result = JsonConvert.DeserializeObject(data, typeof(Activity)) as Activity;
                }
            }
            catch (WebException ex)
            {
                if (ex.Response != null &amp;&amp; ex.Response.ContentLength &gt; 0)
                {
                    using (StreamReader s = new StreamReader(ex.Response.GetResponseStream()))
                    {
                        string message = s.ReadToEnd();
                        Console.WriteLine(message);
                    }
                }
                throw;
            }
</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <p>&#160;</p>
        <p MadCap:conditions="Default.Web"><a href="#top" alt="Return to Top">Return to Top</a>
        </p>
    </body>
</html>